USE CROWDFUNDING;
SELECT * FROM PROJECTS;
SELECT * FROM CALENDER;
SELECT * FROM CREATOR;
SELECT * FROM LOCATION;
SELECT * FROM CATEGORY;

# TOTAL NO OF PROJECTS

SELECT CONCAT(ROUND(count(*)/1000),"K") AS "NO OF PROJECTS" FROM PROJECTS;

# TOTAL NO OF SUCCESSFUL PROJECT

SELECT CONCAT(ROUND(count(*)/1000),"K") AS "NO OF SUCCESSFUL PROJECTS" 
FROM PROJECTS WHERE STATE = "SUCCESSFUL";

# NO OF PROJECT BASED ON OUTCOME

SELECT STATE,CONCAT(ROUND(count(*)/1000),"K") AS "NO OF PROJECTS BASED ON OUTCOME" 
FROM PROJECTS GROUP BY STATE;

# NO OF PROJECT BASED ON TOP 5 COUNTRY

SELECT COUNTRY, COUNT(ID) AS  "NO OF PROJECT BASED ON LOCATION" 
FROM  LOCATION  GROUP BY COUNTRY
LIMIT 5;

# YEAR WISE PROJECTS

SELECT YEAR(FROM_UNIXTIME(created_at)) AS "YEAR",
CONCAT(ROUND(COUNT(*)/1000),"K") AS "YEAR WISE NO OF PROJECT" 
FROM PROJECTS 
GROUP BY YEAR(FROM_UNIXTIME(created_at)) 
order by YEAR(FROM_UNIXTIME(created_at)) asc;

# QUARTER WISE PROJECTS

SELECT CONCAT("Q",QUARTER(FROM_UNIXTIME(created_at))) AS "QUARTER",
CONCAT(ROUND(COUNT(*)/1000),"K") AS "QUARTER WISE NO OF PROJECT" 
FROM PROJECTS 
GROUP BY CONCAT("Q",QUARTER(FROM_UNIXTIME(created_at)));

# MONTH WISE PROJECTS 

SELECT MONTHNAME(FROM_UNIXTIME(created_at)) AS "MONTH", 
CONCAT(ROUND(COUNT(*)/1000),"K") AS "MONTH WISE NO OF PROJECT" 
FROM PROJECTS 
GROUP BY MONTHNAME(FROM_UNIXTIME(created_at))
order by MONTHNAME(FROM_UNIXTIME(created_at)) asc;

# SUCCESSFUL PROJECT BASED ON AMOUNT RAISED, NO OF BACKERS & AVG DAYS

SELECT CONCAT("$",ROUND(SUM(PLEDGED)/100000000),"B") AS "AMOUNT RAISED",
CONCAT(ROUND(SUM(BACKERS_COUNT)/1000000),"M") AS "NO OF BACKERS", 
CONCAT(AVG(DATEDIFF(FROM_UNIXTIME(SUCCESSFUL_AT),FROM_UNIXTIME(created_at))),"DAYS") AS "AVG NO OF DAYS"
FROM projects
WHERE STATE = 'successful';

# TOP 5 SUCCESSFUL PROJECTS BASED ON AMOUNT RAISED

SELECT NAME,CONCAT("$",ROUND(SUM(PLEDGED)/1000),"K") AS "AMOUNT RAISED"
FROM projects
WHERE STATE = 'successful'
GROUP BY NAME
ORDER BY NAME DESC
LIMIT 5;

# TOP 5 PROJECT BASED ON NUMBER OF BACKERS

SELECT NAME,SUM(BACKERS_COUNT) AS "NO OF BACKERS"
FROM projects
WHERE STATE = 'successful'
GROUP BY BACKERS_COUNT
ORDER BY NAME DESC
LIMIT 5;

# Percentage of successful projects overall

create view ss as 
select count(projectid) as "successfulproject" from projects
where state="successful";

create view ss1 as 
select count(projectid) as "projects" from projects;

select concat((successfulproject/projects)*100,"%") as "Percentage of successful projects overall" from ss,ss1;




